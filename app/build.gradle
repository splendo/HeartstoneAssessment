apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "nl.splendo.assignment.posytive"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("keys/assignment.keystore")
            storePassword 'splendo'
            keyAlias 'assignment_key'
            keyPassword '5p13Nd0!'
        }
    }

    buildTypes {
        release {

            // defines, among other usual environmental settings, the API URL for the remote data calls

            debug {
                minifyEnabled false
                buildConfigField "String", 'BASE_API_URL', '"https://raw.githubusercontent.com/splendo/HeartstoneAssessment/"'
                buildConfigField "String", 'CARD_API_ENDPOINT', '"apps/cards.json"'
                applicationIdSuffix ".debug"
            }

            release {
                minifyEnabled true
                signingConfig signingConfigs.release
                buildConfigField "String", 'BASE_API_URL', '"https://raw.githubusercontent.com/splendo/HeartstoneAssessment/"'
                buildConfigField "String", 'CARD_API_ENDPOINT', '"apps/cards.json"'
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    ext {
        supportLibVersion = "26.1.0"
        okhttpVersion = "3.6.0"
        retrofitVersion = "2.2.0"
        gsonVersion = "2.8.0"
        junitVersion = "4.12"
        mockitoVersion="2.7.19"
        espressoCoreVersion = "2.2.2"
        rxVersion = "1.1.0"
        sporkVersion = "4.0.0"
        apacheCommonsVersion = "3.6"
        dbFlowVersion = "4.1.1"
        parcelerVersion = "1.1.9"
        glideVersion = "3.7.0"
        calligraphyVersion = "2.3.0"
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])

        // Support libraries
        compile "com.android.support:appcompat-v7:${supportLibVersion}"
        compile "com.android.support:recyclerview-v7:${supportLibVersion}"
        compile "com.android.support:cardview-v7:${supportLibVersion}"
        compile "com.android.support:design:${supportLibVersion}"
        compile "com.android.support:support-v4:${supportLibVersion}"
        compile "com.android.support:support-vector-drawable:${supportLibVersion}"
        compile "com.android.support:animated-vector-drawable:${supportLibVersion}"

        androidTestCompile "junit:junit:${junitVersion}"
        androidTestCompile "com.android.support.test:runner:0.5"
        androidTestCompile "org.mockito:mockito-android:${mockitoVersion}"
        androidTestCompile "org.mockito:mockito-core:${mockitoVersion}"

        // Injection libraries
        // (Spork is a dutch library for dependency/resource injection, similar to Butterknife)
        compile "com.bytewelder.spork:spork-android:${sporkVersion}@aar"
        compile "com.bytewelder.spork:spork-android-support:${sporkVersion}"

        // Network communication and response parsing
        compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
        compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
        compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
        compile "com.google.code.gson:gson:${gsonVersion}"

        // Utils
        compile "org.apache.commons:commons-lang3:${apacheCommonsVersion}"
        compile "org.parceler:parceler-api:${parcelerVersion}"
        annotationProcessor "org.parceler:parceler:${parcelerVersion}"

        // Database
        annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${dbFlowVersion}"
        compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbFlowVersion}"
        compile "com.github.Raizlabs.DBFlow:dbflow:${dbFlowVersion}"

        // Graphics
        compile "com.github.bumptech.glide:glide:${glideVersion}"
        compile "uk.co.chrisjenx:calligraphy:${calligraphyVersion}"
    }
}